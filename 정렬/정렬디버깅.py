arr = [7,5,9,0,3,1,6,2,4,8]

result = sorted(arr)
print(result)

# 내부 원소를 바로 정렬하는 경우(내부 원소가 바로 정렬됨)
arr.sort()
print(arr)

# key를 활용한 정렬
arr1 = [('바나나',2),('사과',5),('당근',3)]

def setting(data):
    return data[1]

result = sorted(arr1, key=setting)
print(result)

# 정렬 라이브러리의 시간 복잡도!
# 최악의 경우에도 시간 복잡도 O(NlogN)
# 정렬 라이브러리는 이미 잘 작성된 함수이므로 우리가 직접 퀵 정렬을 구현할 때
# 보다 더욱더 효과적임
# 파이썬은 병합 정렬과 삽입 정렬의 아이디어를 더한 하이브리드 방식 정렬 알고리즘 사용

# 코딩테스트에서 정렬 알고리즘이 사용되는 경우! : 3가지
# 1. 정렬 라이브러리로 풀 수 있는 문제
# 2. 정렬 알고리즘의 원리에 대해 물어보는 문제(선택,삽입,퀵)
# 3. 더 빠른 정렬이 필요한 문제
